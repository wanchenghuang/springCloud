spring:
  cloud:
    bus:
      trace:
        enabled: true
  rabbitmq:
    host: ${RABBIT_MQ_HOST:service}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:admin}
    password: ${RABBIT_MQ_PASSWORD:admins}
    virtual-host: my_vhost
  redis:
    host: ${REDIS_HOST:service}
    port: ${REDIS_PORT:6379}
    lettuce:
      pool:
        max-active: 300
    password: ${REDIS_PASSWORD:admins}
    database: 1

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:${DATASOURCE_DBTYPE:mysql}://${DATASOURCE_HOST:service}:${DATASOURCE_PORT:3358}/sc_admin?characterEncoding=UTF-8&useUnicode=true&useSSL=false
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:root123}
  zipkin:
    enabled: true
    sender:
      type: rabbit
  sleuth:
    sampler:
      probability: 1.0
  mvc:
    throw-exception-if-no-handler-found: true
  servlet:
    multipart:
      max-request-size: "2MB"
      max-file-size: "2MB"
  jackson:
    time-zone: GMT+8
#  resources:
#    add-mappings: false

jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  hidePackages: com.chauncy.cloud
  local:
    # 默认2小时本地缓存
    default:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 3600000
      expireAfterAccessInMillis: 1800000
    # 長時本地緩存，主要用于要求时效一般
    longTime:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 300000
      expireAfterAccessInMillis: 180000
    # 短時本地緩存，主要用于要求时效较高的配置
    shortTime:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 60000
      expireAfterAccessInMillis: 40000
  remote:
    # 默认1小时的远程缓存
    default:
      type: redis
      expireAfterWriteInMillis: 360000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:service}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:admins}
      database: 1
    # 长时远程緩存，主要用于要求时效要求一般的集中式缓存
    longTime:
      type: redis
      expireAfterWriteInMillis: 7200000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:service}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:admins}
      database: 1
    # 短時远程緩存，主要用于要求时效较高的集中式缓存
    shortTime:
      type: redis
      expireAfterWriteInMillis: 300000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:service}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:admins}
      database: 1

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    com.springboot.cloud: debug
    java.sql.PreparedStatement: debug
    com.chauncy.cloud: debug
  path: logs/
  file:
    max-size: 1GB

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      logic-delete-value: "Y" # 逻辑已删除值(默认为 Y)
      logic-not-delete-value: "N" # 逻辑未删除值(默认为 N)

#xxl-job
#调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
xxl:
  job:
    admin:
      addresses: http://xxl.hwanc.club:9999/xxl-job-admin
    # 执行器通讯TOKEN [选填]：非空时启用；
    accessToken:
    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
    executor:
      appname: hwc-executor
      # 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address:
      # 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 9991
      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: /data/applogs/xxl-job/jobHandler
      # 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 30
